// Boxes

@mixin box($color: $color-light, $border-color: $color-light) {
    background-color: $color;
    border-radius: $box-border-radius;
    box-sizing: border-box;
    color: inherit;
    font-weight: inherit;
    font-size: inherit;
    border: $rule-thickness solid $border-color;
    margin: $line-height-default 0;
    padding: ($line-height-default / 2);
    & p:last-of-type,
    & ol:last-of-type,
    & ul:last-of-type {
        margin-bottom: 0;
    }
    // No text-indent on paragraphs after boxes
    & + p {
        text-indent: 0;
    }
    // No margin above the first headings in a box
    h1:first-of-type, 
    h2:first-of-type, 
    h3:first-of-type, 
    h4:first-of-type, 
    h5:first-of-type, 
    h6:first-of-type {
        margin-top: 0;
    }
    li {
        // Paragraphs within list items in a box
        p:last-of-type {
            margin-bottom: 0;
        }
    }
    // Definition lists inside a box
    dl {
        &:first-of-type {
            margin-top: 0;
        }
        &:last-of-type {
            margin-bottom: 0;
        }
    }
}

$web-boxes: true !default;
@if $web-boxes {

    .box {
        @include box();
    }

    // A regular paragraph as a box
    p.box {
        text-indent: 0;
    }
    // A list as a box
    ol.box,
    ul.box {
        padding: ($line-height-default / 2) ($line-height-default / 2) ($line-height-default / 2) ($line-height-default);
    }
    // A regular list item as a box
    li.box {}

    // Expandable boxes
    .expandable-box {
        @include box();

        h3:first-child,
        h4:first-child,
        h5:first-child,
        h6:first-child {
            font-style: normal;
            
            strong {

            }
        }
    
        .toggle {
            color: inherit;
            cursor: pointer;
            float: right;
        
            &:after {
            content: " â€“";
            }
            
            &.closed:after {
            content: " +";
            }
            
            &.open:after {
            content: " \2013";
            }
        }
    
        .expandable-box-preview {
            & p:last-of-type,
            & ol:last-of-type,
            & ul:last-of-type {
                margin-bottom: $line-height-default;
            }
    
            .preview-read-more {
                display: block;
                margin: $line-height-default auto 0;
            }
        }
    }

    .feature-boxes {
        display: flex;
        gap: 2rem 1rem;
        flex-wrap: wrap;
        justify-content: space-evenly;
        margin: 4rem 0;

        font-family: $font-text-secondary;

        @media only screen and (min-width: $max-width-default) {
            width: 100vw;
            margin-left: calc(-1 * ((100vw - #{$max-width-default}) * 0.5))
        }

        .feature-box {
            @include box($white, $color-light);

            // border-style: dashed;
            border-color: $color-accent;
            font-size: $font-size-default * 0.9;
            margin: 0;
            max-width: calc(#{$max-width-default} * 0.5 - 2rem);
            padding: 0;

            .feature-box-image-wrapper {
                background-color: $white;
                border: $rule-thickness solid $color-accent;
                border-radius: 5rem;
                height: 5rem;
                width: 5rem;
                margin: -1rem auto 0 auto;
                padding: 0.75rem;
                text-align: center;

                img, svg {
                    border-radius: 5rem;
                    object-fit: cover;
                    width: 100%;
                    height: 100%;
                }
            }

            .feature-box-text {
                margin: 1rem;
            }
        }
    }
}
